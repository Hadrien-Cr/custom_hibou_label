/*
Copyright 2020 Erwan Mahe (github.com/erwanM974)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// ***********************************************
// generic label ; used for lifelines, messages, etc
WHITESPACE = _{ " " | "\r\n" | "\n" | "\t" | "\r" }
HIBOU_LABEL = @{ LETTER ~ (LETTER | ASCII_DIGIT | "_")* }
// ***********************************************
SD_LIFELINE = { HIBOU_LABEL }
MESSAGE_LABEL = { HIBOU_LABEL }
// ***********************************************
// ***********************************************
// ***** interactions / sequence diagrams
TARGET_LF_LIST = { "(" ~ SD_LIFELINE ~ ("," ~ SD_LIFELINE)* ~ ")" }
ENVIRONMENT_TARGET = { "|" }

SD_ACTION_EMISSION = { SD_LIFELINE ~ "--" ~ MESSAGE_LABEL ~ "->" ~ (SD_LIFELINE | TARGET_LF_LIST | ENVIRONMENT_TARGET)}
SD_ACTION_RECEPTION = { MESSAGE_LABEL ~ "->" ~ SD_LIFELINE}

SD_EMPTY_INTERACTION = {"o" | "âˆ…"}

SD_STRICT = {"strict"}
SD_STRICT_INT = { SD_STRICT ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_SEQ = {"seq"}
SD_SEQ_INT = { SD_SEQ ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_ALT = {"alt"}
SD_ALT_INT = { SD_ALT ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_PAR = {"par"}
SD_PAR_INT = { SD_PAR ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_LOOP = {"loop_" ~ (SD_STRICT | SD_SEQ | SD_PAR)}
SD_LOOP_INT = { SD_LOOP ~ "(" ~ SD_INTERACTION ~ ")" }

SD_INTERACTION = { SD_EMPTY_INTERACTION
		| SD_ACTION_RECEPTION
        | SD_ACTION_EMISSION
        | SD_STRICT_INT
        | SD_SEQ_INT
        | SD_ALT_INT
        | SD_PAR_INT
        | SD_LOOP_INT
        }
// ***********************************************
// ***********************************************
// ***** hibou options
GRAPHIC_LOGGER_png = { "png" }
GRAPHIC_LOGGER_svg = { "svg" }
GRAPHIC_LOGGER_horizontal = { "horizontal" }
GRAPHIC_LOGGER_vertical = { "vertical" }
GRAPHIC_LOGGER_opt = _{ GRAPHIC_LOGGER_png | GRAPHIC_LOGGER_svg | GRAPHIC_LOGGER_horizontal | GRAPHIC_LOGGER_vertical }
GRAPHIC_LOGGER_opts = { "[" ~ GRAPHIC_LOGGER_opt ~ ("," ~ GRAPHIC_LOGGER_opt)* ~ "]" }
OPTION_GRAPHIC_LOGGER = { "graphic" ~ GRAPHIC_LOGGER_opts? }
OPTION_LOGGER_KIND = _{ OPTION_GRAPHIC_LOGGER }
OPTION_LOGGER_DECL = { "loggers" ~ "=" ~ "[" ~ OPTION_LOGGER_KIND ~ ("," ~ OPTION_LOGGER_KIND)* ~ "]" }
// ***********************************************
ARITH_INTEGER = { "0" | (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) }
// ***********************************************
OPTION_PRIORITY_emission = { "emission" }
OPTION_PRIORITY_reception = { "reception" }
OPTION_PRIORITY_loop = { "loop" }
OPTION_PRIORITY_hide = { "hide" }
OPTION_PRIORITY_simu = { "simu" }
OPTION_PRIORITY_step = { "step" }
OPTION_PRIORITY_KIND = _{ OPTION_PRIORITY_emission | OPTION_PRIORITY_reception | OPTION_PRIORITY_loop | OPTION_PRIORITY_step | OPTION_PRIORITY_hide | OPTION_PRIORITY_simu }
OPTION_PRIORITY_LEVEL = { ARITH_INTEGER | ("-" ~ ARITH_INTEGER ) }
OPTION_PRIORITY = { OPTION_PRIORITY_KIND ~ "=" ~ OPTION_PRIORITY_LEVEL }
// ***********************************************
OPTION_STRATEGY_GFS_opts = { "[" ~ OPTION_PRIORITY ~ ("," ~ OPTION_PRIORITY)* ~ "]" }
OPTION_STRATEGY_GFS = { "GreedyBestFS" ~ OPTION_STRATEGY_GFS_opts? }
OPTION_STRATEGY_BFS = { "BreadthFS" }
OPTION_STRATEGY_DFS = { "DepthFS" }
OPTION_STRATEGY_KIND = _{ OPTION_STRATEGY_BFS | OPTION_STRATEGY_DFS | OPTION_STRATEGY_GFS }
OPTION_STRATEGY_DECL = { "strategy" ~ "=" ~ OPTION_STRATEGY_KIND }
// ***********************************************
OPTION_PREFILTER_MAX_DEPTH = { "max_depth" ~ "=" ~ ARITH_INTEGER }
OPTION_PREFILTER_MAX_LOOP_DEPTH = { "max_loop_depth" ~ "=" ~ ARITH_INTEGER }
OPTION_PREFILTER_MAX_NODE_NUMBER = { "max_node_number" ~ "=" ~ ARITH_INTEGER }
OPTION_PREFILTER = _{ OPTION_PREFILTER_MAX_DEPTH | OPTION_PREFILTER_MAX_LOOP_DEPTH | OPTION_PREFILTER_MAX_NODE_NUMBER }
OPTION_PREFILTERS_DECL = { "pre_filters" ~ "=" ~ "[" ~ OPTION_PREFILTER ~ ("," ~ OPTION_PREFILTER)* ~ "]" }
// ***********************************************
OPTION_FRONTIER_PRIORITIES_DECL = { "frontier_priorities" ~ "=" ~ "[" ~ OPTION_PRIORITY ~ ("," ~ OPTION_PRIORITY)* ~ "]" }
// ***********************************************
GENERAL_OPTION_DECL  = _{ OPTION_LOGGER_DECL | OPTION_STRATEGY_DECL | OPTION_PREFILTERS_DECL | OPTION_FRONTIER_PRIORITIES_DECL }
// ***********************************************
EXPLORE_OPTION_DECL = _{ GENERAL_OPTION_DECL }
EXPLORE_OPTION_SECTION = { "@explore_option" ~ "{" ~
                               	EXPLORE_OPTION_DECL ~ (";" ~ EXPLORE_OPTION_DECL)*
                                   ~ "}"}
// ***********************************************
OPTION_SEMANTICS_accept = { "accept" }
OPTION_SEMANTICS_prefix = { "prefix" }
OPTION_SEMANTICS_hide = { "hide" }
OPTION_SEMANTICS_simulate_prefix = { "simulate" ~ "[" ~ "multi-prefix" ~ "]" }
OPTION_SEMANTICS_simulate_slice = { "simulate" ~ "[" ~ "multi-slice" ~ "]" }
OPTION_SEMANTICS_KIND = _{ OPTION_SEMANTICS_accept | OPTION_SEMANTICS_prefix | OPTION_SEMANTICS_hide | OPTION_SEMANTICS_simulate_prefix | OPTION_SEMANTICS_simulate_slice }
OPTION_SEMANTICS_DECL = { "semantics" ~ "=" ~ OPTION_SEMANTICS_KIND }
// ***********************************************
OPTION_GOAL_pass = { "Pass" }
OPTION_GOAL_weakpass = { "WeakPass" }
OPTION_GOAL_KIND = _{ OPTION_GOAL_pass | OPTION_GOAL_weakpass }
OPTION_GOAL_DECL = { "goal" ~ "=" ~ OPTION_GOAL_KIND }
// ***********************************************
ANALYZE_OPTION_DECL = _{ GENERAL_OPTION_DECL | OPTION_SEMANTICS_DECL | OPTION_GOAL_DECL }
ANALYZE_OPTION_SECTION =  { "@analyze_option" ~ "{" ~
                               	ANALYZE_OPTION_DECL ~ (";" ~ ANALYZE_OPTION_DECL)*
                                   ~ "}"}
// ***********************************************
// ***********************************************
// declarations
HIBOU_MODEL_MS_DECL = { "@message" ~ "{" ~
	MESSAGE_LABEL ~ (";" ~ MESSAGE_LABEL)*
    ~ "}"}

HIBOU_MODEL_LF_DECL = { "@lifeline" ~ "{" ~
	SD_LIFELINE ~ (";" ~ SD_LIFELINE)* ~ "}"}
// ***********************************************
// ***********************************************
// setup & .hsf file

SETUP_SECTION = _{ EXPLORE_OPTION_SECTION | ANALYZE_OPTION_SECTION | HIBOU_MODEL_MS_DECL | HIBOU_MODEL_LF_DECL }
HIBOU_MODEL_SETUP = { SETUP_SECTION* }
HSF_PEST_FILE = { SOI ~
		HIBOU_MODEL_SETUP ~ SD_INTERACTION ~
        EOI }

// ***********************************************
// ***********************************************
// traces & multitraces
TRACE_LIFELINE = { HIBOU_LABEL }
TRACE_MESSAGE = { HIBOU_LABEL }

TRACE_EMISSION_SYMBOL = { "!" }
TRACE_RECEPTION_SYMBOL = { "?" }

TRACE_ACTION = { TRACE_LIFELINE ~ (TRACE_EMISSION_SYMBOL|TRACE_RECEPTION_SYMBOL) ~ TRACE_MESSAGE }
// ***********************************************
CANAL_LIFELINES = { TRACE_LIFELINE ~ ("," ~ TRACE_LIFELINE)* }
CANAL_ANY = {"#any"}
CANAL_ALL = {"#all"}
TRACE_CANAL = _{ "[" ~ (CANAL_ANY | CANAL_ALL | CANAL_LIFELINES) ~ "]" }
TRACE = { TRACE_CANAL ~ (TRACE_ACTION ~ ("." ~ TRACE_ACTION)*)? }
// ***********************************************
MULTI_TRACE = { "{" ~ (TRACE ~ (";" ~ TRACE)* )? ~ "}" }
// ***********************************************
HTF_PEST_FILE = { SOI ~ (MULTI_TRACE|TRACE) ~ EOI }
// ***********************************************
