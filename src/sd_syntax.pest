/*
Copyright 2020 Erwan Mahe (github.com/erwanM974)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// ***********************************************
// generic label ; used for lifelines, messages, etc
WHITESPACE = _{ " " | "\r\n" | "\n" | "\t" | "\r" }
HIBOU_LABEL = @{ LETTER ~ (LETTER | ASCII_DIGIT | "_")* }
// ***********************************************
// ***********************************************
// ***** interactions / sequence diagrams
HIBOU_LABEL_LIST = { "(" ~ HIBOU_LABEL ~ ("," ~ HIBOU_LABEL)* ~ ")" }
ENVIRONMENT_TARGET = { "|" }

SD_COMMUNICATION_ORIGIN = { HIBOU_LABEL ~ "--" }
COMM_ASYNCH = {"<" ~ "asynch" ~ ">"}
COMM_SYNCH = {"<" ~ "synch" ~ ">"}
COMM_TYPE = _{ COMM_ASYNCH | COMM_SYNCH }
SD_COMMUNICATION_CONTENT = { COMM_TYPE? ~ HIBOU_LABEL }
SD_COMMUNICATION_TARGET = { "->" ~ (HIBOU_LABEL | HIBOU_LABEL_LIST | ENVIRONMENT_TARGET) }
SD_COMMUNICATION_ACTION = { SD_COMMUNICATION_ORIGIN? ~ SD_COMMUNICATION_CONTENT ~ SD_COMMUNICATION_TARGET }

SD_EMPTY_INTERACTION = {"o" | "âˆ…"}

SD_STRICT = {"strict"}
SD_STRICT_INT = { SD_STRICT ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_SEQ = {"seq"}
SD_SEQ_INT = { SD_SEQ ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_COREG = {"coreg"}
SD_COREG_INT = { SD_COREG ~ HIBOU_LABEL_LIST ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_ALT = {"alt"}
SD_ALT_INT = { SD_ALT ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_PAR = {"par"}
SD_PAR_INT = { SD_PAR ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_AND = {"and"}
SD_AND_INT = { SD_AND ~ "(" ~ SD_INTERACTION ~ ( "," ~ SD_INTERACTION)+ ~ ")" }

SD_LOOP_KIND_S = { "S" }
SD_LOOP_KIND_H = { "H" }
SD_LOOP_KIND_W = { "W" }
SD_LOOP_KIND_P = { "P" }
SD_LOOP = {"loop" ~ (SD_LOOP_KIND_S | SD_LOOP_KIND_H | SD_LOOP_KIND_W | SD_LOOP_KIND_P)}
SD_LOOP_INT = { SD_LOOP ~ "(" ~ SD_INTERACTION ~ ")" }

SD_INTERACTION = { SD_EMPTY_INTERACTION
		| SD_COMMUNICATION_ACTION
        | SD_STRICT_INT
        | SD_SEQ_INT
        | SD_COREG_INT
        | SD_ALT_INT
        | SD_PAR_INT
        | SD_LOOP_INT
        | SD_AND_INT
        }
// ***********************************************
// ***********************************************
// ***** hibou options
GRAPHIC_LOGGER_png = { "png" }
GRAPHIC_LOGGER_svg = { "svg" }
GRAPHIC_LOGGER_horizontal = { "horizontal" }
GRAPHIC_LOGGER_vertical = { "vertical" }
GRAPHIC_LOGGER_opt = _{ GRAPHIC_LOGGER_png | GRAPHIC_LOGGER_svg | GRAPHIC_LOGGER_horizontal | GRAPHIC_LOGGER_vertical }
GRAPHIC_LOGGER_opts = { "[" ~ GRAPHIC_LOGGER_opt ~ ("," ~ GRAPHIC_LOGGER_opt)* ~ "]" }
OPTION_GRAPHIC_LOGGER = { "graphic" ~ GRAPHIC_LOGGER_opts? }
OPTION_LOGGER_KIND = _{ OPTION_GRAPHIC_LOGGER }
OPTION_LOGGER_DECL = { "loggers" ~ "=" ~ "[" ~ OPTION_LOGGER_KIND ~ ("," ~ OPTION_LOGGER_KIND)* ~ "]" }
// ***********************************************
ARITH_INTEGER = { "0" | (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) }
// ***********************************************
OPTION_PRIORITY_emission = { "emission" }
OPTION_PRIORITY_reception = { "reception" }
OPTION_PRIORITY_loop = { "loop" }
OPTION_PRIORITY_hide = { "hide" }
OPTION_PRIORITY_simu = { "simu" }
OPTION_PRIORITY_step = { "step" }
OPTION_PRIORITY_KIND = _{ OPTION_PRIORITY_emission | OPTION_PRIORITY_reception | OPTION_PRIORITY_loop | OPTION_PRIORITY_step | OPTION_PRIORITY_hide | OPTION_PRIORITY_simu }
OPTION_PRIORITY_LEVEL = { ARITH_INTEGER | ("-" ~ ARITH_INTEGER ) }
OPTION_PRIORITY = { OPTION_PRIORITY_KIND ~ "=" ~ OPTION_PRIORITY_LEVEL }
// ***********************************************
OPTION_STRATEGY_BFS = { "BreadthFS" }
OPTION_STRATEGY_DFS = { "DepthFS" }
OPTION_STRATEGY_KIND = _{ OPTION_STRATEGY_BFS | OPTION_STRATEGY_DFS }
OPTION_STRATEGY_DECL = { "strategy" ~ "=" ~ OPTION_STRATEGY_KIND }
// ***********************************************
OPTION_PREFILTER_MAX_DEPTH = { "max_depth" ~ "=" ~ ARITH_INTEGER }
OPTION_PREFILTER_MAX_LOOP_DEPTH = { "max_loop_depth" ~ "=" ~ ARITH_INTEGER }
OPTION_PREFILTER_MAX_NODE_NUMBER = { "max_node_number" ~ "=" ~ ARITH_INTEGER }
OPTION_PREFILTER = _{ OPTION_PREFILTER_MAX_DEPTH | OPTION_PREFILTER_MAX_LOOP_DEPTH | OPTION_PREFILTER_MAX_NODE_NUMBER }
OPTION_PREFILTERS_DECL = { "filters" ~ "=" ~ "[" ~ OPTION_PREFILTER ~ ("," ~ OPTION_PREFILTER)* ~ "]" }
// ***********************************************
OPTION_FRONTIER_PRIORITIES_DECL = { "priorities" ~ "=" ~ "[" ~ OPTION_PRIORITY ~ ("," ~ OPTION_PRIORITY)* ~ "]" }
// ***********************************************
GENERAL_OPTION_DECL  = _{ OPTION_LOGGER_DECL
                          | OPTION_STRATEGY_DECL
                          | OPTION_PREFILTERS_DECL
                          | OPTION_FRONTIER_PRIORITIES_DECL }
// ***********************************************
EXPLORE_OPTION_DECL = _{ GENERAL_OPTION_DECL }
EXPLORE_OPTION_SECTION = { "@explore_option" ~ "{" ~
                               	EXPLORE_OPTION_DECL ~ (";" ~ EXPLORE_OPTION_DECL)*
                                   ~ "}"}
// ***********************************************
OPTION_ANA_KIND_accept = { "accept" }
OPTION_ANA_KIND_prefix = { "prefix" }
OPTION_ANA_KIND_hide = { "hide" }
OPTION_ANA_KIND_simulate_prefix = { "simulate" ~ "[" ~ "multi-prefix" ~ "]" }
OPTION_ANA_KIND_simulate_slice = { "simulate" ~ "[" ~ "multi-slice" ~ "]" }
OPTION_ANALYSIS_KIND = _{ OPTION_ANA_KIND_accept
                          | OPTION_ANA_KIND_prefix
                          | OPTION_ANA_KIND_hide
                          | OPTION_ANA_KIND_simulate_prefix
                          | OPTION_ANA_KIND_simulate_slice }
OPTION_ANALYSIS_KIND_DECL = { "analysis_kind" ~ "=" ~ OPTION_ANALYSIS_KIND }
// ***********************************************
OPTION_GOAL_pass = { "Pass" }
OPTION_GOAL_weakpass = { "WeakPass" }
OPTION_GOAL_none = { "None" }
OPTION_GOAL_KIND = _{ OPTION_GOAL_pass | OPTION_GOAL_weakpass | OPTION_GOAL_none }
OPTION_GOAL_DECL = { "goal" ~ "=" ~ OPTION_GOAL_KIND }
// ***********************************************
OPTION_LOCANA_yes = { "local_analysis" ~ "=" ~ "true" }
OPTION_LOCANA_no = { "local_analysis" ~ "=" ~ "false" }
OPTION_LOCANA = _{ OPTION_LOCANA_yes | OPTION_LOCANA_no }
// ***********************************************
ANALYZE_OPTION_DECL = _{ GENERAL_OPTION_DECL | OPTION_ANALYSIS_KIND_DECL | OPTION_GOAL_DECL | OPTION_LOCANA }
ANALYZE_OPTION_SECTION =  { "@analyze_option" ~ "{" ~
                               	ANALYZE_OPTION_DECL ~ (";" ~ ANALYZE_OPTION_DECL)*
                                   ~ "}"}
// ***********************************************
// ***********************************************
// declarations
HIBOU_MODEL_MS_DECL = { "@message" ~ "{" ~
	HIBOU_LABEL ~ (";" ~ HIBOU_LABEL)*
    ~ "}"}

HIBOU_MODEL_LF_DECL = { "@lifeline" ~ "{" ~
	HIBOU_LABEL ~ (";" ~ HIBOU_LABEL)* ~ "}"}

HIBOU_MODEL_GT_DECL = { "@gate" ~ "{" ~
	HIBOU_LABEL ~ (";" ~ HIBOU_LABEL)* ~ "}"}
// ***********************************************
// ***********************************************
// setup & .hsf file

SETUP_SECTION = _{ EXPLORE_OPTION_SECTION | ANALYZE_OPTION_SECTION | HIBOU_MODEL_MS_DECL | HIBOU_MODEL_LF_DECL | HIBOU_MODEL_GT_DECL }
HIBOU_MODEL_SETUP = { SETUP_SECTION* }
HSF_PEST_FILE = { SOI ~
		HIBOU_MODEL_SETUP ~ SD_INTERACTION ~
        EOI }

// ***********************************************
// ***********************************************
// traces & multitraces
TRACE_LIFELINE = { HIBOU_LABEL }
TRACE_MESSAGE = { HIBOU_LABEL }

TRACE_EMISSION_SYMBOL = { "!" }
TRACE_RECEPTION_SYMBOL = { "?" }

TRACE_ACTION = { TRACE_LIFELINE ~ (TRACE_EMISSION_SYMBOL|TRACE_RECEPTION_SYMBOL) ~ TRACE_MESSAGE }
// ***********************************************
CANAL_LIFELINES = { TRACE_LIFELINE ~ ("," ~ TRACE_LIFELINE)* }
CANAL_ANY = {"#any"}
CANAL_ALL = {"#all"}
TRACE_CANAL = _{ "[" ~ (CANAL_ANY | CANAL_ALL | CANAL_LIFELINES) ~ "]" }
TRACE = { TRACE_CANAL ~ (TRACE_ACTION ~ ("." ~ TRACE_ACTION)*)? }
// ***********************************************
MULTI_TRACE = { "{" ~ (TRACE ~ (";" ~ TRACE)* )? ~ "}" }
// ***********************************************
HTF_PEST_FILE = { SOI ~ (MULTI_TRACE|TRACE) ~ EOI }
// ***********************************************
